syntax = "proto3";

enum ParameterType {
    STRING = 0;
    NUMBER = 1;
    BOOLEAN = 2;
    OBJECT = 3;
    ARRAY = 4;
    STRING_ARRAY = 5;
    NUMBER_ARRAY = 6;
    BOOLEAN_ARRAY = 7;
    OBJECT_ARRAY = 8;
    ANY = 9;
    TIMESTAMP = 10;
}

enum DeviceHealthState {
    // The device is currently online and sensor updates are sent
    ONLINE = 0;
    
    // The device is currently offline or cannot be connected to
    OFFLINE = 1;
    
    // The device has entered some unknown error state and may not function
    // as expected
    ERROR = 2;
    
    // The device state is completely unknown and may or may not function
    // correctly
    UNKNOWN = 3;
}

message SensorSchema {
    // A device-unique name of the sensor
    string name = 1;
    
    // An optional description of the sensor
    string description = 2;
    
    // The type of value produced by the sensor
    ParameterType type = 3;
    
    // The unit of the sensor
    string unit = 4;
}

message ParameterDefinition {
    // A command unique name for the parameter
    string name = 1;
    
    // One ore more types that can be assigned to the parameter
    repeated ParameterType types = 2;
    
    // Whether or not the parameter is optional, if omitted or set to false the
    // parameter will be treated as required
    bool optional = 3;
    
    // An optional description of the parameter
    string description = 4;
}

message CommandDefinition {
    // A device unique name of the command
    string name = 1;
    
    // A list of parameters accepted by the command
    repeated ParameterDefinition parameters = 2;
    
    // A optional, short description of the command
    string short_description = 3;
    
    // A optional, long and details description of the command
    string long_description = 4;
}

message SensorValue {
    string device_name = 1;
    
    string sensor_name = 2;
    
    ParameterType type = 3;
    
    string value = 4; // JSON encoded
}

message DeviceDefinition {
    string name = 1;
    string device_type = 2;
    string description = 3;
    repeated SensorSchema sensors = 4;
    repeated CommandDefinition commands = 5;
}

message InitiateDeviceDiscovery {
    string origin = 1;
}

message DeviceDiscoveryAnnouncement {
    DeviceDefinition device = 1;
    repeated SensorValue sensor_values = 2;
}
